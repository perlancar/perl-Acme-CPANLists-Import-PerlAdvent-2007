<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2007 Perl Advent Calendar: All I want for Christmas is Perl 5.10</title>
<link rel="stylesheet" href="../style.css" type="text/css" />
</head>
<body>
<h1><a href="../">Perl Advent Calendar 2007-12</a>-05</h1>
<h2 align="center">All I want for Christmas is Perl 5.10</h2>
<h3 align="center">by Josh McAdams</h3>

<p>
Word on the street is that there is a hot new item out this year that might be ready in time for Christmas.  This new Perl 5.10 is the gift to get.  Of course, Santa is a little sneaky so you might get a new Perl and not even realize it.  To check your system and see if you've been given the gift of Perl we'll use <tt><a href="http://search.cpan.org/search?module=File::Which">File::Which</a></tt>.
</p>
<p>
<tt>File::Which</tt> is a portable implementation of the Unix <tt>which</tt> utility in that it searches the appropriate search path for your system and shows you the location of the executable that will be run if you just type a program name in on the command line.  If called in a scalar context, then only the first executable is returned.  In a list context, every instance of that program that can be found in your program search path is returned; a synonym for this latter behavior is the intuitively named <tt>where</tt>.
</p>


<blockquote style="padding: 1em; border: 2px ridge black; background-color:#eee">
Also note the potential for alternative uses of this module beyond the usual
location of an executable in <tt>$ENV{PATH}</tt>, namely finding things in
other PATH-like variables such as <tt>$ENV{MANPATH}</tt>, <tt>$ENV{PERL5LIB}</tt> or <tt>$ENV{CLASSPATH}</tt>) by temporarily clobbering the global with <tt>local $ENV{PATH} = ...</tt> &mdash; The Mgt
</blockquote>

<h1><a href="mod5.pl">mod5.pl</a></h1>
<pre>
   1 <span class="k">use</span> <span class="w">File::Which</span><span class="sc">;</span>
   2 
   3 <span class="k">for</span> <span class="k">my</span> <span class="i">$perl</span> <span class="s">(</span> <span class="i">where</span><span class="s">(</span><span class="q">&#39;perl&#39;</span><span class="s">)</span> <span class="s">)</span> <span class="s">{</span>
   4     <span class="k">my</span> <span class="i">$output</span> = <span class="q">`$perl -v`</span><span class="sc">;</span>
   5     <span class="k">if</span> <span class="s">(</span> <span class="i">$output</span> =~ <span class="q">/v(\d+\.\d+\.\d+)/</span> <span class="s">)</span> <span class="s">{</span>
   6         <span class="k">my</span> <span class="i">$version</span> = <span class="i">$1</span><span class="sc">;</span>
   7         <span class="k">if</span> <span class="s">(</span> <span class="i">$version</span> =~ <span class="q">/5\.10/</span> <span class="s">)</span> <span class="s">{</span>
   8             <span class="k">print</span> <span class="q">&quot;Santa brought us Perl $version and left it at $perl\n&quot;</span><span class="sc">;</span>
   9         <span class="s">}</span>
  10         <span class="k">else</span> <span class="s">{</span>
  11             <span class="k">print</span> <span class="q">&quot;Crummy old Perl $version is still at $perl\n&quot;</span><span class="sc">;</span>
  12         <span class="s">}</span>
  13     <span class="s">}</span>
  14 <span class="s">}</span>
</pre>

</body></html>
