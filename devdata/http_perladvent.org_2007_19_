<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by Pod::Advent 0.02 (Pod::Simple 3.02, Perl::Tidy 20031021) on 2008-01-10 21:15:50 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2007 Perl Advent Calendar: What do you give someone with a Birthday in the Holidays?</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body>
<h1><a href="../">Perl Advent Calendar 2007-12</a>-19</h1>
<h2 align="center">What do you give someone with a Birthday in the Holidays?</h2>
<h3 align="center">by Bill Ricker</h3>
<p></p>
<p></p>
<p></p>
<p></p>
<blockquote style="padding: 1em; border: 2px ridge black; background-color:#eee"><p>This is a bit of a departure from normal, to continue the Community's celebration for Perl's 20th Birthday.</p>
</blockquote>
<p>Our favorite language turned 20 yesterday. (I hope Perl doesn't go out and get really loaded next year.) So <I>what</I> did the community give to Perl this anniversary?</p>
<p><UL> <LI> <tt><a href="http://use.perl.org/articles/07/12/18/2213209.shtml">Birthday Card delivered to Larry</a></tt> </LI> <LI>and another Birthday Card <tt><a href="http:../18/">here</a></tt> </LI> <LI> <tt><a href="http://utsl.gen.nz/gitweb/?p=perl;a=tag;h=birthday-perl-3">Incomplete history of Perl</a></tt> by <tt><a href="http://use.perl.org/article.pl?sid=07/12/19/1648213">mugwumpjism</a></tt> </LI> <LI>Parrot 0.5.1 Released. <I>Perl 6 lives!</I></LI> <LI><B>Perl 5.10.0 Stable</B> <tt><a href="http://www.nntp.perl.org/group/perl.perl5.porters/2007/12/msg131636.html">Released</a></tt> and <tt><a href="http://search.cpan.org/~rgarcia/perl-5.10.0">On CPAN</a></tt>. </LI> </UL></p>
<p>Perl 5.10? What's that? Is it just 5.8.9, rounding up? No, so much more than a maintenance release. Is that like Perl 6, in time for <B>this</B> Christmas? No, not really, but closer than some might imagine. And whatever it is, it <I>is</I> in time for <B>this</B> Christmas.</p>
<p>First, and best for folks with legacy code (<I>and with CPAN, that's all of us</I>), 5.10 is backwards compatible by default, so <I>can</I> be treated like a maintenance release of 5.8.x <I>if you want to</I> (or <I>need</I> to). All new features are, by default, b<optional>, so won't break old code that doesn't import them by name or by announcing 5.10 intended. Like other core module-pragmas, the aptly named <tt>feature</tt> pragma will bring in only the one's you've asked for (and learned?): <tt><span class="k">use</span> <span class="w">feature</span> <span class="q">qw/say ~~/</span><span class="sc">;</span>
</tt> But we'll bring them in the easy way in out example.</LI></p>
<p>So What new features are available?</p>
<p><UL> <LI> Faster and pluggable RE/pattern matching engine (and stays faster even if no features are imported) </LI> <LI> Several syntax keywords and operators from Perl 6 are back-ported / prereleased in 5.10, including a case statement based on SmartMatch aka ~~ .</LI> <LI><tt><span class="w">say</span>
</tt> is like <tt><span class="k">print</span>
</tt> only shorter and with the free <tt>\<span class="w">n</span>
</tt> of <tt><span class="k">-l</span>
</tt> mode <I>for this one</I> output. <LI> Named captures in RE matches. </LI> <LI> "possessive modifiers" and other back-track cut/commit control in RegEx (like Prolog)</LI> <LI> stateful closure variables can be declared where needed (rather than in an outer scope, either otherwise superfluous or *shudder* global) </LI> <LI> better error messages, especially <B>which</B> variable was undef when it should not have been, even if no features enabled. </LI> </UL></p>
<p>So what will be our first Perl 5.10 program be, Hello World or a JAPH or something showing syntax? TIMTOWTDI, so why choose!</p>
<pre><span class="c">	perl mod19.pl hello world 0 ' ' undef JaPh jApH</span></pre>
<pre><span class="c">	Hello World
	Hello World for the 2th time
	Hello 0 for the 3th time
	Hello 0 for the 4th time
	Hello World for the 5th time
	Hello Just another Perl 5.10 hacker for the 6th time
	Hello just Another perl 5.10 Hacker for the 7th time</span></pre>
<a name="mod19.pl"></a><h2><a href="mod19.pl">mod19.pl</a></h2><pre>
   1 <span class="k">use</span> <span class="w">feature</span> <span class="q">&#39;:5.10&#39;</span><span class="sc">;</span> <span class="c"># or ...</span>
   2 <span class="c"># use 5.10.0; or 5.9.5 or v5.10 or 5.010</span>
   3 
   4 <span class="k">sub </span><span class="m">hello</span><span class="sc">;</span>
   5 <span class="k">while</span> <span class="s">(</span><span class="i">@ARGV</span><span class="s">)</span><span class="s">{</span>
   6  <span class="k">given</span><span class="s">(</span><span class="k">shift</span><span class="s">)</span><span class="s">{</span>
   7    <span class="k">when</span><span class="s">(</span><span class="q">&quot;hello&quot;</span><span class="s">)</span><span class="s">{</span><span class="i">hello</span><span class="sc">;</span> <span class="s">}</span>
   8    <span class="k">when</span><span class="s">(</span><span class="q">&quot;hello world&quot;</span><span class="s">)</span><span class="s">{</span><span class="i">hello</span><span class="sc">;</span> <span class="s">}</span>
   9    <span class="k">when</span><span class="s">(</span><span class="q">&#39;Hello World&#39;</span><span class="s">)</span><span class="s">{</span><span class="i">hello</span><span class="sc">;</span> <span class="s">}</span>
  10    <span class="k">when</span><span class="s">(</span><span class="q">q{world}</span><span class="s">)</span><span class="s">{</span><span class="i">hello</span><span class="sc">;</span>   <span class="s">}</span>
  11    <span class="k">when</span><span class="s">(</span><span class="q">/ \b hello [-\s\W_]?+(?&lt;Name&gt;\w+)/ix</span><span class="s">)</span><span class="s">{</span>
  12 	<span class="i">hello</span> <span class="i">$+</span>{<span class="w">Name</span>}<span class="sc">;</span> <span class="s">}</span>
  13    <span class="k">when</span><span class="s">(</span><span class="q">/ \A (?: false | 0{1}+ [.0]* | \s++ | ) \Z /ix</span><span class="s">)</span><span class="s">{</span>
  14 	<span class="i">hello</span> <span class="n">0</span><span class="sc">;</span> <span class="s">}</span> <span class="c"># false but defined</span>
  15    <span class="k">when</span><span class="s">(</span><span class="q">/ null | undef /ix</span><span class="s">)</span><span class="s">{</span><span class="i">hello</span> <span class="k">undef</span> <span class="s">}</span> <span class="c">#  undef</span>
  16    <span class="k">when</span><span class="s">(</span><span class="q">/\b hello \b/ix</span><span class="s">)</span><span class="s">{</span><span class="i">hello</span><span class="sc">;</span> <span class="s">}</span> <span class="c">#catch others</span>
  17    <span class="k">when</span><span class="s">(</span><span class="q">/(?&lt;J&gt;j)(?&lt;A&gt;a)(?&lt;P&gt;p)(?&lt;H&gt;h)/ix</span><span class="s">)</span><span class="s">{</span>
  18 	<span class="i">hello</span><span class="s">(</span><span class="q">&quot;$+{J}ust $+{A}nother $+{P}erl 5.10 $+{H}acker&quot;</span><span class="s">)</span><span class="sc">;</span>
  19 	<span class="s">}</span>
  20    <span class="i">default</span> <span class="s">{</span> <span class="w">say</span> <span class="q">&quot;what &#39;$_&#39;?&quot;</span><span class="sc">;</span>    <span class="s">}</span>
  21  <span class="s">}</span>
  22 <span class="s">}</span>
  23 
<a name="hello"></a>  24 <span class="k">sub </span><span class="m">hello</span> <span class="s">{</span>
  25   <span class="k">my</span> <span class="s">(</span><span class="i">$msg</span><span class="s">)</span>=<span class="i">@_</span><span class="sc">;</span>
  26   <span class="w">state</span> <span class="i">$n</span>=<span class="n">0</span><span class="sc">;</span>
  27   <span class="i">$msg</span> //= <span class="q">&#39;World&#39;</span><span class="sc">;</span>      
  28   <span class="w">say</span> <span class="q">&quot;Hello $msg&quot;</span><span class="cm">,</span>
  29         <span class="i">$n</span>++ ? <span class="q">&quot; for the ${n}th time&quot;</span> <span class="co">:</span> <span class="q">&quot;&quot;</span><span class="sc">;</span>
  30 <span class="s">}</span>
</pre>
<blockquote style="padding: 1em; border: 2px ridge black; background-color:#eee"><p>For more information on Perl 5.10 -</p>
<p><UL> <LI>Perl 5.10 <tt><a href="http://www.nntp.perl.org/group/perl.perl5.porters/2007/12/msg131636.html">Release note</a></tt> </LI> <LI> Perl 5.10 source <tt><a href="http://search.cpan.org/~rgarcia/perl-5.10.0">On CPAN</a></tt>. <LI><tt><a href="http://www.slideshare.net/rjbs/perl-510-for-people-who-arent-totally-insane">Ricardo SIGNES (rjbs)'s "Perl 5.10 for "Normal" Programmers"</a></tt> from <tt><a href="http://pghpw.org/ppw2007/talk/737">PPW</a></tt> </LI> <LI> <tt><a href="http://www.slideshare.net/acme/whats-new-in-perl-510">Acme's What's New</a><a href=" "> </a></tt> </LI> <LI>Yves Orton's <tt><a href="http://www.regex-engineer.org/slides/perl510_regex.html">Perl 5.10 Advanced RegEx's</a></tt> from NPW/DPW/LPW </LI> </LI> <LI> ActivePerl binary <tt><a href="http://blogs.activestate.com/activestate/2007/12/merry-perl-mas.html">downloads</a></tt> and </LI> <LI> Strawberry Perl 5.10.0 Release <tt><a href="http://strawberryperl.com/download/strawberry-perl-5.10.0-final.exe">exe installer</a></tt> and <tt><a href="http://use.perl.org/~Alias/journal/35193">announcement</a></tt> </LI> <LI> <A HREF="http://use.perl.org/article.pl?sid=07/12/26/1628211"> What's new in Perl 5.10 - 4 micro articles</A> by GABOR.</A> </LI> <LI><A HREF="http://use.perl.org/article.pl?sid=08/01/07/1923242"> Relocatable</A> </LI> </UL></p>
</blockquote>
</body>
</html>
