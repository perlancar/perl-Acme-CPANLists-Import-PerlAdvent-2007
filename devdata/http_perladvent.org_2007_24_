<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by Pod::Advent 0.04 (Pod::Simple 3.02, Perl::Tidy 20060719) on 2007-12-24 10:35:03 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2007 Perl Advent Calendar: Checking the list twice</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body>
<h1><a href="../">Perl Advent Calendar 2007-12</a>-24</h1>
<h2 align="center">Checking the list twice</h2>
<h3 align="center">by David Westbrook</h3>

<p>Santa has a long list of contacts to maintain every year with all those nice (and naughty!) children to deliver presents to. <tt><a href="http://search.cpan.org/search?module=Text::vCard">Text::vCard</a></tt>
(and the companion <tt>::Addressbook</tt>) can be used<sup><a href="#1">1</a></sup> to take such a list from a custom (database, CSV<sup><a href="#2">2</a></sup>, elf-driven, etc) address book and create a standard (<tt><a href="http://www.faqs.org/rfcs/rfc2426.html">RFC 2426</a></tt>) addressbook, such as this <tt><a href="mod24.vcf">mod24.vcf</a></tt> file for your favorite vCard-supporting application.<sup><a href="#3">3</a></sup> One of the entries is shown below, both as the generated vCard entry and in action.</p>

<img style="float:right" src="mod24.png"> 

<pre><span class="c">BEGIN:VCARD
N:Simpson;Bart;;;
ADR;TYPE=home:;;742 Evergreen Terrace;Springfield;;;USA
NICKNAME:Kid2
VERSION:1
TEL;TYPE=home:555-FAKE
NOTE:Really wants Bonestorm VIII
UID:SLEIGHLIST2
FN:Bart Simpson
END:VCARD</span></pre>
<p><br clear="all"></p>
<a name="mod24.pl"></a><h2><a href="mod24.pl">mod24.pl</a></h2><pre>
   1 <span class="k">use</span> <span class="w">Text::vCard</span><span class="sc">;</span>
   2 <span class="k">use</span> <span class="w">Text::vCard::Addressbook</span><span class="sc">;</span>
   3 
   4 <span class="k">my</span> <span class="i">@cols</span> = <span class="k">split</span> <span class="q">/,/</span><span class="cm">,</span> <span class="q">&lt;DATA&gt;</span><span class="sc">;</span> <span class="k">chomp</span> <span class="i">@cols</span><span class="sc">;</span>
   5 <span class="k">my</span> <span class="i">@rows</span> = <span class="k">map</span> <span class="s">{</span> <span class="k">chomp</span><span class="sc">;</span> <span class="k">my</span> <span class="i">%h</span><span class="sc">;</span> <span class="i">@h</span>{<span class="i">@cols</span>}=<span class="k">split</span> <span class="q">/,/</span><span class="cm">,</span> <span class="i">$_</span><span class="sc">;</span> \<span class="i">%h</span> <span class="s">}</span> <span class="q">&lt;DATA&gt;</span><span class="sc">;</span>
   6 
   7 <span class="k">my</span> <span class="i">$address_book</span> = <span class="w">Text::vCard::Addressbook</span><span class="w">-&gt;new</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
   8 
   9 <span class="k">foreach</span> <span class="k">my</span> <span class="i">$row</span> <span class="s">(</span> <span class="i">@rows</span> <span class="s">)</span><span class="s">{</span>
  10   <span class="k">my</span> <span class="i">$vcard</span> = <span class="i">$address_book</span><span class="i">-&gt;add_vcard</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
  11   <span class="i">$vcard</span><span class="i">-&gt;version</span><span class="s">(</span><span class="n">1</span><span class="s">)</span><span class="sc">;</span>
  12   <span class="i">$vcard</span><span class="i">-&gt;fullname</span><span class="s">(</span> <span class="i">$row</span>-&gt;{<span class="w">name</span>} <span class="s">)</span><span class="sc">;</span>
  13   <span class="i">$vcard</span><span class="i">-&gt;NOTE</span><span class="s">(</span> <span class="q">&quot;Really wants a &quot;</span> . <span class="i">$row</span>-&gt;{<span class="w">present</span>} <span class="s">)</span><span class="sc">;</span>
  14   <span class="i">$vcard</span><span class="i">-&gt;NICKNAME</span><span class="s">(</span> <span class="q">&quot;Kid&quot;</span> . <span class="i">$row</span>-&gt;{<span class="w">id</span>} <span class="s">)</span><span class="sc">;</span>
  15   <span class="i">$vcard</span><span class="i">-&gt;UID</span><span class="s">(</span> <span class="q">&#39;SLEIGHLIST&#39;</span>.<span class="i">$row</span>-&gt;{<span class="w">id</span>} <span class="s">)</span><span class="sc">;</span>
  16   <span class="k">my</span> <span class="i">$name</span> = <span class="i">$vcard</span><span class="i">-&gt;add_node</span><span class="s">(</span><span class="s">{</span><span class="w">node_type</span><span class="cm">=&gt;</span><span class="q">&#39;N&#39;</span><span class="s">}</span><span class="s">)</span><span class="sc">;</span>
  17   <span class="k">my</span> <span class="s">(</span><span class="i">$given</span><span class="cm">,</span><span class="i">$family</span><span class="s">)</span> = <span class="k">split</span> <span class="q">&#39; &#39;</span><span class="cm">,</span> <span class="i">$row</span>-&gt;{<span class="w">name</span>}<span class="sc">;</span>
  18   <span class="i">$name</span><span class="i">-&gt;family</span><span class="s">(</span> <span class="i">$family</span> <span class="s">)</span><span class="sc">;</span>
  19   <span class="i">$name</span><span class="i">-&gt;given</span><span class="s">(</span> <span class="i">$given</span> <span class="s">)</span><span class="sc">;</span>
  20   <span class="k">my</span> <span class="i">$address</span> = <span class="i">$vcard</span><span class="i">-&gt;add_node</span><span class="s">(</span><span class="s">{</span><span class="w">node_type</span><span class="cm">=&gt;</span><span class="q">&#39;ADR&#39;</span><span class="s">}</span><span class="s">)</span><span class="sc">;</span>
  21   <span class="i">$address</span><span class="i">-&gt;add_types</span><span class="s">(</span><span class="q">&#39;home&#39;</span><span class="s">)</span><span class="sc">;</span>
  22   <span class="i">$address</span><span class="i">-&gt;street</span><span class="s">(</span> <span class="i">$row</span>-&gt;{<span class="w">street</span>} <span class="s">)</span><span class="sc">;</span>
  23   <span class="i">$address</span><span class="i">-&gt;city</span><span class="s">(</span> <span class="i">$row</span>-&gt;{<span class="w">city</span>} <span class="s">)</span><span class="sc">;</span>
  24   <span class="i">$address</span><span class="i">-&gt;region</span><span class="s">(</span> <span class="i">$row</span>-&gt;{<span class="w">state</span>} <span class="s">)</span><span class="sc">;</span>
  25   <span class="i">$address</span><span class="i">-&gt;post_code</span><span class="s">(</span> <span class="i">$row</span>-&gt;{<span class="w">zip</span>} <span class="s">)</span><span class="sc">;</span>
  26   <span class="i">$address</span><span class="i">-&gt;country</span><span class="s">(</span> <span class="i">$row</span>-&gt;{<span class="w">country</span>} <span class="s">)</span><span class="sc">;</span>
  27   <span class="k">my</span> <span class="i">$phone</span> = <span class="i">$vcard</span><span class="i">-&gt;add_node</span><span class="s">(</span><span class="s">{</span><span class="w">node_type</span><span class="cm">=&gt;</span><span class="q">&#39;TEL&#39;</span><span class="s">}</span><span class="s">)</span><span class="sc">;</span>
  28   <span class="i">$phone</span><span class="i">-&gt;add_types</span><span class="s">(</span><span class="q">&#39;HOME&#39;</span><span class="s">)</span><span class="sc">;</span>
  29   <span class="i">$phone</span><span class="i">-&gt;value</span><span class="s">(</span> <span class="i">$row</span>-&gt;{<span class="w">phone</span>} <span class="s">)</span><span class="sc">;</span>
  30 <span class="s">}</span>
  31 
  32 <span class="k">print</span> <span class="i">$address_book</span><span class="i">-&gt;export</span><span class="s">(</span><span class="s">)</span><span class="sc">;</span>
  33 
<a name="__DATA__"></a>  34 <span class="k">__DATA__</span>
  35 <span class="q">id,name,present,street,city,state,zip,country,phone</span>
  36 <span class="q">1,Ralphie Parker,Red Ryder BB,123 There St,Hammond,IN,46320,USA,219-555-0000</span>
  37 <span class="q">2,Bart Simpson,slingshot,742 Evergreen Terrace,Springfield,ST,0000,USA,555-FAKE</span>
  38 <span class="q">3,Donald Gardner,two front teeth,1944 School St,Smithtown,NY,11745,USA,631-555-0000</span>
</pre>
<p><a name="1"></a>1. Took some trial and error along with this <tt><a href="http://www.frankl.info/wordpress/uncategorized/howto-create-vcards-with-perl">Howto create vCards with perl</a></tt> article by Michael Frankl for a phone number example.</p>
<p><a name="2"></a>2. In this example we use (lines 4-5) a (bare-bones) hand-rolled CSV reader. For any actual use, <tt><a href="http://search.cpan.org/search?module=Text::CSV">Text::CSV</a></tt>, <tt><a href="http://search.cpan.org/search?module=DBD::CSV">DBD::CSV</a></tt>, <tt><a href="http://search.cpan.org/search?module=DBD::AnyData">DBD::AnyData</a></tt>, or the like can (should) be used instead for robustness.</p>
<p><a name="3"></a>3. Screenshot is from <tt><a href="http://www.micro-progs.com/vcardorganizer/">vCardOrganizer 1.2.5</a></tt> (neutral usage -- just selected from search results).</p>
</body>
</html>
